package cloud.autotests.tests;

import cloud.autotests.config.App;
import cloud.autotests.helpers.DriverUtils;
import com.codeborne.selenide.CollectionCondition;
import com.codeborne.selenide.Configuration;
import io.appium.java_client.MobileBy;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.AndroidElement;
import io.qameta.allure.Description;
import io.restassured.RestAssured;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;


import static com.codeborne.selenide.Selenide.*;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.Assertions.assertThat;


public class BrowserStackIosSampleTests extends TestBase {

    @BeforeAll
    static void configureBaseUrl() {
        RestAssured.baseURI = App.config.apiUrl();
        Configuration.baseUrl = App.config.webUrl();
    }


    @Test
    @Description("Autogenerated test")
    @DisplayName("Page console log should not have errors")
    void consoleShouldNotHaveErrorsTest() {
        step("Open url 'https://app-automate.browserstack.com'", () ->
                open("https://app-automate.browserstack.com"));

        step("Console logs should not contain text 'SEVERE'", () -> {
            String consoleLogs = DriverUtils.getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }

    @Test
    void searchTest() {
        step("Open url 'https://app-automate.browserstack.com'", () -> {
            $(MobileBy.AccessibilityId("Search Wikipedia")).click();
            $(MobileBy.id("org.wikipedia.alpha:id/search_src_text")).setValue("BrowserStack");
            $$(MobileBy.id("org.wikipedia.alpha:id/page_list_container")).shouldHave(CollectionCondition.sizeGreaterThan(0));
        });
        closeWebDriver();
    }
}